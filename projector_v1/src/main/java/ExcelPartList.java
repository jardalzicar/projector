import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.ArrayList;
import java.util.Iterator;

public class ExcelPartList extends Component{

    private String templateFileName = "part_list_template.numbers";

    public ExcelPartList() {
        super();
        defaultPath = "part_list/part_list.numbers";
        componentName = "ExcelPartList";
    }

    @Override
    void initFiles() {
        //writeExcel(new ArrayList<>());
        copyResourceFile(templateFileName, filePath);
    }

    public boolean writeExcel(ArrayList<ArrayList<String>> data){
        XSSFWorkbook workbook = new XSSFWorkbook();
        XSSFSheet sheet = workbook.createSheet("Sheet1");

        Row srow = sheet.createRow(1);
        Cell scell = srow.createCell(1);
        scell.setCellValue("Porject name - Part list. Generated by PROJECTOR.");

        int rowCount = 3;

        for (ArrayList<String> line : data) {
            Row row = sheet.createRow(rowCount++);

            int columnCount = 1;

            for (String item : line) {
                Cell cell = row.createCell(columnCount++);
                cell.setCellValue(item);
            }
        }

        try{
            FileOutputStream outputStream = new FileOutputStream(filePath);
            workbook.write(outputStream);
            outputStream.close();
            return true;
        } catch (IOException e) {
            System.out.println("Could not write Excel file.");
            return false;
        }
    }

    public ArrayList<ArrayList<String>> readExcel() throws IOException {
        FileInputStream inputStream = new FileInputStream(new File(filePath));
        ArrayList<ArrayList<String>> output = new ArrayList<ArrayList<String>>();

        Workbook workbook = new XSSFWorkbook(inputStream);
        Sheet firstSheet = workbook.getSheetAt(0);

        Iterator<Row> iterator = firstSheet.iterator();


        while (iterator.hasNext()) {
            Row nextRow = iterator.next();
            ArrayList<String> line = new ArrayList<String>();
            output.add(line);
            Iterator<Cell> cellIterator = nextRow.cellIterator();

            while (cellIterator.hasNext()) {
                Cell cell = cellIterator.next();
                line.add(cell.getStringCellValue());
            }
        }

        if(output.size() >= 1){
            output.remove(0);
        }

        workbook.close();
        inputStream.close();
        return output;
    }

    public void printArrayList(ArrayList<ArrayList<String>> data) {
        for (ArrayList<String> line : data) {
            for (String item : line) {
                System.out.print(item + " ");
            }
            System.out.println("");
        }
    }

}
